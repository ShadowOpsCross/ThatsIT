Resources:
  MyS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: shadobowl
Parameters:
  BucketName:
    Type: String
    Description: The name of the S3 bucket
  GitHubUsername:
    Type: String
    Description: GitHub username
  GitHubRepository:
    Type: String
    Description: GitHub repository name
  GitHubBranch:
    Type: String
    Description: GitHub branch name
  GitHubDirectory:
    Type: String
    Description: GitHub directory path


  MyBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref MyS3Bucket
      PolicyDocument:
        Statement:
          - Sid: AllowPublicRead
            Effect: Allow
            Principal: '*'
            Action: s3:GetObject
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref MyS3Bucket
                - '/*'

  MyCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: MyCodePipeline
      Stages:
        - Name: Source
          Actions:
            - Name: GitHubSourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration:
                Owner: ShadowOpsCross
                Repo: ThatsIT
                Branch: master
                OAuthToken: !Ref GitHubOAuthToken
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: SourceOutput
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: S3DeployAction
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: 1
              Configuration:
                BucketName: !Ref MyS3Bucket
                Extract: 'true'
                ObjectKey: index.html
              InputArtifacts:
                - Name: SourceOutput
              RunOrder: 1

  MyCloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: CloudFront distribution for my website
        Aliases:
          - my-domain-name.example.com
        DefaultRootObject: index.html
        Origins:
          - Id: MyS3BucketOrigin
            DomainName: !GetAtt MyS3Bucket.RegionalDomainName
            S3OriginConfig:
              OriginAccessIdentity: ''
        DefaultCacheBehavior:
          TargetOriginId: MyS3BucketOrigin
          ViewerProtocolPolicy: allow-all
        PriceClass: PriceClass_100
        HttpVersion: http2
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
        Enabled: true

  MyStackSet:
    Type: AWS::CloudFormation::StackSet
    Properties:
      StackSetName: MyStackSet
      TemplateURL: !Ref MyStackTemplateUrl
      Parameters:
        - ParameterKey: MyBucketName
          ParameterValue: !Ref MyS3Bucket
      Capabilities:
        - CAPABILITY_NAMED_IAM
        - CAPABILITY_AUTO_EXPAND

Outputs:
  CloudFrontURL:
    Value: !Sub "http://${MyCloudFrontDistribution.DomainName}"
    Description: CloudFront URL





