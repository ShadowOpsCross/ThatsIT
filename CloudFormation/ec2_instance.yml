Parameters:
  LatestUbuntuFocalAMI:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/canonical/ubuntu/server/focal/stable/current/amd64/hvm/ebs-gp2/ami-id

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16

  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.0/24

  # ECSCluster:
  #   Type: AWS::ECS::Cluster
  #   Properties:
  #     ClusterName: DeepStick

  EC2SG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: SG to allow SSH access via port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: EC2-SG

  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - !Ref EC2InstanceRole

  # EC2InstanceRole:
  #   Type: AWS::IAM::Role
  #   Properties:
  #     AssumeRolePolicyDocument:
  #       Version: "2012-10-17"
  #       Statement:
  #         - Effect: Allow
  #           Principal:
  #             Service: ec2.amazonaws.com
  #           Action: sts:AssumeRole
  #     ManagedPolicyArns:
  #       - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role

  EC2LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: EC2LaunchTemplate
      LaunchTemplateData:
        ImageId: !Ref LatestUbuntuFocalAMI
        InstanceType: t2.micro
        SecurityGroupIds:
          - !Ref EC2SG
        IamInstanceProfile:
          Arn: !GetAtt EC2InstanceProfile.Arn
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            a
            echo ECS_CLUSTER=${ECSCluster} >> /etc/ecs/ecs.config

  # AutoScalingGroup:
  #   Type: AWS::AutoScaling::AutoScalingGroup
  #   Properties:
  #     AutoScalingGroupName: EC2AutoScalingGroup
  #     LaunchTemplate:
  #       LaunchTemplateName: EC2LaunchTemplate
  #       Version: !GetAtt EC2LaunchTemplate.LatestVersionNumber
  #     MinSize: 2
  #     MaxSize: 2
  #     DesiredCapacity: 2
  #     VPCZoneIdentifier:
  #       - !Ref Subnet1
  #       - !Ref Subnet2
  #     Tags:
  #       - Key: Name
  #         Value: EC2Instance
  #         PropagateAtLaunch: true

# Outputs:
#   ECSClusterName:
#     Value: !Ref ECSCluster
#     Export:
#       Name: ECSClusterName
      
      


